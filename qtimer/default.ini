# Sample QTimer config file
# Copy this file to $HOME/.qtimer/qtimer.cfg
# and fill in the relevant data
; This is another way to comment

# Options for integration with project management software
[account]

# You must set these in your config file
# Sets the plugin to use for connecting to given url and token
# See qtimer.py for more plugins
type = activecollab
url = ac.example.net
token = 194-XXXXXXXXXXX

# This changes how long (in minutes) projects and tickets are retained before a re-query of the remote server
# Default is 2 hours
cache_lifetime = 120

[timers]
# Store time periods rounded to this number of seconds
rounding = 1

[debug]
verbose = False

# A generic, single database configuration.

[alembic]
# path to migration scripts, required if you're overriding the database
script_location = qtimer/schema

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# Change this to override the default storage location
sqlalchemy.url = sqlite:///DATA_DIR/qtimer.db

# Logging configuration
[loggers]
keys = root, alembic, qtimer, sqlalchemy, output

[handlers]
keys = console, output, debug_log

[formatters]
keys = generic, output

[logger_root]
level = NOTSET
handlers = console, debug_log
qualname =

[logger_sqlalchemy]
level = NOTSET
handlers =
qualname = sqlalchemy

[logger_alembic]
level = NOTSET
handlers =
qualname = alembic

[logger_qtimer]
level = NOTSET
handlers =
qualname = qtimer

[logger_output]
level = NOTSET
handlers = output
qualname = output
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = WARN
formatter = generic

[handler_output]
class = StreamHandler
args = (sys.stderr,)
level = INFO
formatter = output

[handler_debug_log]
class = logging.handlers.RotatingFileHandler
args = ('debug.log', 'a', 1048576, 5, 'utf-8',)
level = DEBUG
formatter = generic

[formatter_generic]
format = %(asctime)s|%(levelname)-7.7s [%(name)s] %(message)s
datefmt = %H:%M:%S

[formatter_output]
format = %(message)s
datefmt = %H:%M:%S
